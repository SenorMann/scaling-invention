name: CI

on:
  push:
    branches:
      - "main"

jobs:
  bump_package_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        with:
          tag-prefix:  'v'
  
  upload_artefact:
    runs-on: ubuntu-latest
    needs: bump_package_version
    steps:
      - uses: actions/checkout@v2

      - name: Upload Artefact
        env:
          JFROG_AUTH: ${{ secrets.JFROG_AUTH }}
          JFROG_USER: ${{ secrets.JFROG_USER }}
        run: |
          echo "registry=https://mlkmahmud.jfrog.io/artifactory/api/npm/sls-poc/" >> .npmrc
          echo "_auth=${JFROG_AUTH}" >> .npmrc
          echo "email=${JFROG_USER}" >> .npmrc
          echo "always-auth-true" >> .npmrc
          npm publish --registry https://mlkmahmud.jfrog.io/artifactory/api/npm/sls-poc/

  trigger_amplify_build:
    runs-on: ubuntu-latest
    needs: upload_artefact
    strategy:
      matrix:
        node: [16]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      # - name: download and configure JFrog cli
      #   run: |
      #     npm install -g jfrog-cli-v2-jf
      #     jf config add --user ${JFROG_USER} --password ${JFROG_API_KEY} --artifactory-url ${JFROG_URL} --interactive=false

      - name: Set latest version
        run: |
          echo "RELEASE_VERSION=$(npm pkg get version | tr -d \")" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Set artifact Version
        env:
          AMPLIFY_APP_ID: ${{ secrets.AMPLIFY_APP_ID }}
          VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          aws amplify update-branch --app-id ${AMPLIFY_APP_ID} --branch-name main --environment-variables ARTIFACT_VERSION=${VERSION}

      - name: trigger webhook
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          curl -X POST -d {} ${WEBHOOK_URL} -H "Content-Type:application/json"
      